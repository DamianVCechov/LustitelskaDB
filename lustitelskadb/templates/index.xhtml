<html py:extends="master.xhtml" py:strip="True">
<head py:block="head" py:strip="True">
<title py:block="master_title">${getattr(tmpl_context, 'project_name', 'turbogears2')} | Welcome</title>
</head>

<body py:block="body" py:strip="True">
	<?py
from operator import lt, le, gt, ge
from datetime import datetime

now = datetime.now()

first_special_dates = {
	'01.01': '&#x1F386;', # Fireworks
	'14.03': '&Pi;', # Pi Day
	'01.04': '&#x1F0CF;', # Playing Card Black Joker - Fool's day
	'24.12': '&#x1F384;', # Christmas Tree
	'25.12': '&#x1F384;', # Christmas Tree
	'26.12': '&#x1F384;', # Christmas Tree
	'31.12': '&#x1F386;' # Fireworks
}

second_special_dates = {
	'14.03': '&pi;' # pi Day
}

fourth_special_dates = {
	'08.03': '&#x1F339;', # Rose - International Women's Day
	'14.03': '&#x1F967;', # Pie - Pi Day
	'31.07': '&#x1F346;', # Aubergine - National Orgasm Day
	'08.08': '&#x1F346;' # Aubergine - International Female Orgasm Day
}

fifth_special_dates = {
	'14.03': '&#x1F427;', # Penguin - Czech name-day RÃºt
	'26.03': '&#x1F410;', # Goat - Free The Nipple Day
	'01.04': '&#x1F40C;', # Snail
	'17.09': '&#x1F427;', # Penguin - 1st release of Linux
	'13.10': '&#x1F410;', # Goat - National Bra Day
	'24.12': '&#x26C4;', # Snowman Without Snow
	'25.12': '&#x26C4;', # Snowman Without Snow
	'26.12': '&#x26C4;' # Snowman Without Snow
}

last_special_dates = {
	'01.01': '&#x1F387;', # Firework Sparkler
	'15.02': '&#x1F4BB;', # Personal Computer - World Computer Day
	'12.03': '&#x1F526;', # Electric torch - Invented in 12.3.1898
	'17.03': '&#x1F382;', # Birthday cake - This DB B-day
	'15.09': '&#x1F365;', # Fish Cake with Swirl Design - 1st releaseof Debian
	'21.10': '&#x1F4A1;', # Bulb - Invented in 21.10.1879
	'29.10': '&#x1FA94;', # Aladdin's lamp - name-day of Aladdin
	'31.10': '&#x1F383;', # Jack-O-Lantern - Halloween
	'01.11': '&#x1F56F;', # Candle - All Saints Day
	'24.12': '&#x2744;', # Snowflake
	'25.12': '&#x2744;', # Snowflake
	'26.12': '&#x2744;', # Snowflake
	'31.12': '&#x1F387;' # Firework Sparkler
}

badge = {
	0: '&#x1F984;',
	1: first_special_dates.get(now.strftime('%d.%m'), '&#x1F947;'),
	2: '&#x1F948;',
	3: '&#x1F949;',
	4: fourth_special_dates.get(now.strftime('%d.%m'), '&#x1F954;'),
	5: fifth_special_dates.get(now.strftime('%d.%m'), '&#x1F422;'),
	# 6: '&#x1FBF6;',
	# 7: '&#x1FBF7;',
	# 8: '&#x1FBF8;',
	# 9: '&#x1FBF9;',
	'leaf': '&#x1F343;', # Leaf Fluttering In Wind
	'last': last_special_dates.get(now.strftime('%d.%m'), '&#x1F3EE;')
}

def wednesday_challenge_comming():
	now = datetime.now()
	if now.weekday() == 2 and now.hour >= 18 or now.weekday() == 3 and now.hour < 18:
		return True
	else:
		return False
?>
	<div class="bg-light rounded text-uppercase text-danger d-flex align-items-center clearfix display-4 my-3" py:if="wednesday_challenge_comming()">
		<img class="img-fluid rounded wednesday-challenge-img m-1" style="max-width: 128px;" src="${tg.url('/img/wednesday-challenge-256.webp')}" alt="Wednesday Challenge" /><span class="fw-bolder mx-3">Don't forget the Wednesday challenge!</span>
	</div>
	<div class="row pt-1" py:if="games">
		<div class="col-lg-6" py:for="idx, game in enumerate(games)">
			<div class="table-responsive">
				<table class="table table-sm table-hover">
					<thead>
						<tr class="table-dark text-center">
							<th class="rounded-top" scope="col" colspan="5"><span>Game</span> ${game_nums[idx].game_no}</th>
						</tr>
						<tr class="table-dark text-center">
							<th scope="col">${h.bicon('graph-up-arrow')}</th>
							<th scope="col" class="w-100">${h.bicon('person')}</th>
							<th scope="col">${h.bicon('stopwatch')}</th>
							<th scope="col">${h.bicon('justify')}</th>
							<th scope="col">${h.bicon('clock')}</th>
						</tr>
					</thead>
					<tbody py:with="losers_divided=False; nochallengers_divided=False; dsq_divided=False">
						<py:for each="row in game">
							<tr class="table-dark text-center" py:if="row.game_no % 7 == 5 and not nochallengers_divided and not row.wednesday_challenge">
								<th scope="row" colspan="5">Not played the challenge</th>
								<?py nochallengers_divided = True ?>
							</tr>
							<tr class="table-dark text-center" py:if="not losers_divided and not row.game_rows">
								<th scope="row" colspan="5">Losers</th>
								<?py losers_divided = True ?>
							</tr>
							<tr class="table-dark text-center" py:if="not dsq_divided and not row.game_time">
								<th scope="row" colspan="5">Disqualified</th>
								<?py dsq_divided = True ?>
							</tr>
							<tr py:attrs="{'class': 'position-relative{}'.format({1: ' table-warning', 2: ' table-light', 3: ' table-success'}.get(row.game_rank, ' table-secondary' if row.wednesday_challenge == False else ''))}" title="${row.game_points if row.game_points != None else '?'}">
								<th scope="row" py:attrs="{'class': 'text-center{}'.format(' text-muted' if row.game_rows is None else '')}">${Markup(badge.get('leaf')) if row.game_rows and gt(row.game_rows, 1) and row.game_time is None else Markup(badge.get('last', row.game_rank)) if row.game_rows and gt(row.game_rows, 1) and row.game_points == 0 and row.game_time is not None else Markup(badge.get(row.game_rank, row.game_rank)) if row.game_rank is not None else '?'}<a class="stretched-link" href="${tg.url('/detail/{}'.format(row.uid))}"></a></th>
								<td py:attrs="{'class': 'text-center w-100{}'.format(' text-muted' if row.game_rows is None else '')}">${row.xtwitter.display_name}<span py:if="row.comment"> ${h.bicon('chat-left-dots', color="muted")}</span></td>
								<td py:attrs="{'class': 'text-center{}'.format(' text-muted' if row.game_rows is None else '')}">${"{}:{:02}".format(row.game_time.hour * 60 + row.game_time.minute, row.game_time.second) if row.game_time else '-'}</td>
								<td py:attrs="{'class': 'text-center{}'.format(' text-muted' if row.game_rows is None else '')}">${h.bicon('{}-circle-fill'.format(row.game_rows), color="{}".format(["success", "success", "primary", "primary", "danger", "danger"][row.game_rows-1])) if row.game_rows else h.bicon('emoji-frown-fill', color="dark")}</td>
								<td py:attrs="{'class': 'text-center{}'.format(' text-muted' if row.game_rows is None else '')}">${"{}:{:02}".format(row.game_result_time.hour * 60 + row.game_result_time.minute, row.game_result_time.second) if row.game_result_time else '-'}</td>
							</tr>
						</py:for>
					</tbody>
					<tfoot>
						<tr class="table-primary text-center">
							<th scope="col" colspan="5"><span>Played players</span> ${len(game)}</th>
						</tr>
					</tfoot>
				</table>
			</div>
		</div>
	</div>

	<div class="row pt-1" py:if="games">
		<div class="col-3">
			<a class="btn btn-outline-secondary w-100${' disabled' if le(latest_game.game_no, game_nums[0].game_no) else ''}" href="${tg.url('/{}'.format(latest_game.game_no))}">${h.icon('fast-backward')}</a>
		</div>
		<div class="col-3">
			<a class="btn btn-outline-secondary w-100${' disabled' if le(latest_game.game_no, game_nums[0].game_no) else ''}" href="${tg.url('/{}'.format(game_nums[0].game_no+2 if len(game_nums) and le(game_nums[0].game_no+2, latest_game.game_no) else latest_game.game_no))}">${h.icon('backward')}</a>
		</div>
		<div class="col-3">
			<a class="btn btn-outline-secondary w-100${' disabled' if ge(oldest_game.game_no, game_nums[1].game_no if gt(len(game_nums), 1) else oldest_game.game_no) else ''}" href="${tg.url('/{}'.format(game_nums[1].game_no-1 if gt(len(game_nums), 1) else oldest_game.game_no))}">${h.icon('forward')}</a>
		</div>
		<div class="col-3">
			<a class="btn btn-outline-secondary w-100${' disabled' if ge(oldest_game.game_no, game_nums[1].game_no if gt(len(game_nums), 1) else oldest_game.game_no) else ''}" href="${tg.url('/{}'.format(oldest_game.game_no))}">${h.icon('fast-forward')}</a>
		</div>
	</div>

	<div id="closingDeadlineProgress" class="progress my-4" style="height: 2rem;" role="progressbar" aria-label="Closing deadline progress bar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
		<div class="progress-bar progress-bar-striped progress-bar-animated fw-bold fs-6"></div>
	</div>

	<div id="carouselComments" class="carousel carousel-dark slide bg-light rounded-3 mt-3 p-2" data-bs-ride="carousel">
		<div class="carousel-inner">
			<div class="carousel-item${' active' if idx == 0 else ''}" py:for="idx, item in enumerate(comments)">
				<figure class="my-5">
					<blockquote class="blockquote">
						<p class="text-center fs-3">${item.comment}</p>
					</blockquote>
					<figcaption class="blockquote-footer text-center fs-5">
						${item.xtwitter.display_name} <cite title="Source Title">@${item.xtwitter.user_name}</cite>
					</figcaption>
				</figure>
			</div>
		</div>

		<button class="carousel-control-prev" type="button" data-bs-target="#carouselComments" data-bs-slide="prev">
			<span class="carousel-control-prev-icon" aria-hidden="true"></span> <span class="visually-hidden">Previous</span>
		</button>
		<button class="carousel-control-next" type="button" data-bs-target="#carouselComments" data-bs-slide="next">
			<span class="carousel-control-next-icon" aria-hidden="true"></span> <span class="visually-hidden">Next</span>
		</button>
	</div>
</body>
</html>
